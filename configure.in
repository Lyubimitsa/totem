AC_PREREQ(2.52)
AC_INIT(totem, 0.11.0, http://bugzilla.gnome.org/enter_bug.cgi?product=totem)
AC_CONFIG_SRCDIR(src/totem.c)
AM_INIT_AUTOMAKE(AC_PACKAGE_NAME, AC_PACKAGE_VERSION)
AM_CONFIG_HEADER(config.h)

AC_DEFINE(PACKAGE, AC_PACKAGE_NAME, [package name])
AC_DEFINE(VERSION, AC_PACKAGE_VERSION, [package version])
AC_DEFINE(GETTEXT_PACKAGE, "AC_PACKAGE_NAME", [foo])
GETTEXT_PACKAGE=AC_PACKAGE_NAME
AC_SUBST(GETTEXT_PACKAGE)

dnl libtool foo for the gnome-vfs plugin
AM_DISABLE_STATIC
AM_PROG_LIBTOOL

AC_ARG_ENABLE(fpic,
[  --disable-fpic          Disable -fPIC on shared libs (default on x86)],
no_fpic=yes, no_fpic=no)

case "$host_or_hostalias" in
	i386-*-freebsd*)
	no_fpic="yes"
	;;
	i?86-*-linux* | i386-*-solaris* | i?86-* | k?-* | athlon-*)
	no_fpic="yes"
	;;
esac

if test x"$enable_fpic" != x; then
	case "${enable_fpic}" in
	yes)
	no_fpic="no"
	;;
	*)
	no_fpic="yes"
	;;
	esac
fi

if test x$no_fpic = "xyes"; then
  cat libtool | sed -e 's/^pic_flag=/#pic_flag=/' > libtool-nofpic
else
  cat libtool > libtool-nofpic
fi

chmod +x libtool-nofpic

AC_PROG_INTLTOOL([0.20])

PKG_CHECK_MODULES(LIBGNOMEUI, libgnomeui-2.0 >= 2.1.1,
		GNOMEUI_UNSTABLE="-UUSE_STABLE_LIBGNOMEUI",
		GNOMEUI_UNSTABLE="-DUSE_STABLE_LIBGNOMEUI")
AC_SUBST(GNOMEUI_UNSTABLE)

PKG_CHECK_MODULES(EXTRA_GNOME, libgnomeui-2.0 libglade-2.0 gnome-vfs-2.0)
AC_SUBST(EXTRA_GNOME_CFLAGS)
AC_SUBST(EXTRA_GNOME_LIBS)

PKG_CHECK_MODULES(VFS, gnome-vfs-2.0)
AC_SUBST(VFS_CFLAGS)
AC_SUBST(VFS_LIBS)

AM_PATH_XINE(0.9.14,, AC_MSG_ERROR(*** You should install xine-lib >= 0.9.14 first ***))

AC_PATH_X
XTEST_LIBS=""
AC_CHECK_LIB(Xtst, XTestFakeKeyEvent,
		XTEST_LIBS="-lXtst -L$x_libraries"
		AC_DEFINE(HAVE_XTEST, 1, [defined if you have XTest library]),
		,
		"-L$x_libraries")
AC_SUBST(XTEST_LIBS)

AC_CHECK_HEADER(irman.h,,)

REMOTE_LIBS=""
AC_CHECK_LIB(lirc_client, lirc_init, [
                AC_CHECK_HEADER(lirc/lirc_client.h, [
                        REMOTE_LIBS="-llirc_client"
                        AC_DEFINE(HAVE_REMOTE, 1, [defined if you have lirc library])
		])
])
AC_SUBST(REMOTE_LIBS)

AC_MSG_CHECKING(for broken old architecture)
if test "`uname -m`x" = "i686x" ; then
       AC_MSG_RESULT(h0rk3d)
else
       AC_MSG_RESULT(n334)
fi
AC_MSG_CHECKING(for broken user)
if test "`whoami`x" = "hadessx" ; then
       AC_MSG_RESULT(h0rk3d)
else
       AC_MSG_RESULT(n334)
fi


AC_PATH_PROG(GCONFTOOL, gconftool-2)
AM_GCONF_SOURCE_2

dnl debug
AC_ARG_ENABLE(debug,
		AC_HELP_STRING([--disable-debug],[disables compilation of debugging messages]),
	[case "${enableval}" in
	yes) ENABLE_DEBUG=yes ;;
	no)  ENABLE_DEBUG=no ;;
	*) AC_MSG_ERROR(bad value ${enableval} for --enable-debug) ;;
	esac],
[ENABLE_DEBUG=yes]) dnl Default value
if test x$ENABLE_DEBUG = xyes; then
	AC_DEFINE(TOTEM_DEBUG, 1, [Define if DEBUG statements should be compiled in])
fi

dnl Add the languages which your application supports here.
ALL_LINGUAS="be ca cs da de es et fr it ja lv ms nl no pt_BR ru sv vi"
AM_GLIB_GNU_GETTEXT

AC_OUTPUT([
Makefile
totem.spec
src/Makefile
data/Makefile
po/Makefile.in
])

