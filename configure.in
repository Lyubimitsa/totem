AC_PREREQ(2.52)
AC_INIT(totem, 0.9.1, http://bugzilla.gnome.org/enter_bug.cgi?product=totem)
AC_CONFIG_SRCDIR(src/totem.c)
AM_INIT_AUTOMAKE(AC_PACKAGE_NAME, AC_PACKAGE_VERSION)
AM_CONFIG_HEADER(config.h)

AC_DEFINE(PACKAGE, AC_PACKAGE_NAME)
AC_DEFINE(VERSION, AC_PACKAGE_VERSION)
AC_DEFINE(GETTEXT_PACKAGE, "AC_PACKAGE_NAME", [foo])
GETTEXT_PACKAGE=AC_PACKAGE_NAME
AC_SUBST(GETTEXT_PACKAGE)

AC_PROG_INTLTOOL([0.20])

PKG_CHECK_MODULES(EXTRA_GNOME, libgnomeui-2.0 libglade-2.0 gnome-vfs-2.0)
AC_SUBST(EXTRA_GNOME_CFLAGS)
AC_SUBST(EXTRA_GNOME_LIBS)

AM_PATH_XINE(0.9.9,, AC_MSG_ERROR(*** You should install xine-lib first ***))

AC_PATH_X
XTEST_LIBS=""
AC_CHECK_LIB(Xtst, XTestFakeKeyEvent,
		XTEST_LIBS="-lXtst -L$x_libraries"
		AC_DEFINE(HAVE_XTEST),
		,
		"-L$x_libraries")
AC_SUBST(XTEST_LIBS)


AC_MSG_CHECKING(for broken old architecture)
if test "`uname -m`x" = "i686x" ; then
	AC_MSG_RESULT(h0rk3d)
else
	AC_MSG_RESULT(n334)
fi

AC_PATH_PROG(GCONFTOOL, gconftool-2)
AM_GCONF_SOURCE_2

dnl debug
AC_ARG_ENABLE(debug,
		AC_HELP_STRING([--disable-debug],[disables compilation of debugging messages]),
	[case "${enableval}" in
	yes) ENABLE_DEBUG=yes ;;
	no)  ENABLE_DEBUG=no ;;
	*) AC_MSG_ERROR(bad value ${enableval} for --enable-debug) ;;
	esac],
[ENABLE_DEBUG=yes]) dnl Default value
if test x$ENABLE_DEBUG = xyes; then
	AC_DEFINE(TOTEM_DEBUG, 1, [Define if DEBUG statements should be compiled in])
fi

dnl Add the languages which your application supports here.
ALL_LINGUAS="de es fr it"
AM_GLIB_GNU_GETTEXT

AC_OUTPUT([
Makefile
src/Makefile
data/Makefile
po/Makefile.in
])

