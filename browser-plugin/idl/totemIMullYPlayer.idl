/* Totem Mozilla plugin
 *
 * Copyright (C) <2004> Bastien Nocera <hadess@hadess.net>
 * Copyright (C) <2002> David A. Schleef <ds@schleef.org>
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Library General Public
 * License as published by the Free Software Foundation; either
 * version 2 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Library General Public License for more details.
 *
 * You should have received a copy of the GNU Library General Public
 * License along with this library; if not, write to the
 * Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
 * Boston, MA 02110-1301  USA.
 */

#include "nsISupports.idl"

/* Original documentation at:
 * http://download.divx.com/player/DivXWebPlayer_WebmasterSDK.zip */

[scriptable, uuid(9fd39e29-09ec-42ce-a075-a2f58bf40c7b)]
interface totemIMullYPlayer : nsISupports {
  /* Version */
  ACString GetVersion ();

  /* Setup */
  void SetMinVersion (in ACString version);
  void SetMode (in ACString mode);
  void SetAllowContextMenu (in boolean allow);
  void SetAutoPlay (in boolean play);
  void SetLoop (in boolean loop);
  void SetBufferingMode (in ACString mode);
  void SetBannerEnabled (in boolean enabled);
  void SetVolume (in unsigned long volume);
  void SetMovieTitle (in AUTF8String movieTitle);
  void SetPreviewImage (in AUTF8String imageURL);
  void SetPreviewMessage (in AUTF8String message);
  void SetPreviewMessageFontSize (in unsigned long size);

  /* Media management */
  void Open (in AUTF8String URL);

  /* Playback */
  void Play ();
  void Pause ();
  void StepForward ();
  void StepBackward ();
  void FF ();
  void RW ();
  void Stop ();
  void Mute ();
  void UnMute ();
  void Seek (in ACString method, in unsigned long percent);

  /* Windowing */
  void About ();
  void ShowPreferences ();
  void ShowContextMenu ();
  void GoEmbedded ();
  void GoWindowed ();
  void GoFullscreen ();
  void Resize (in unsigned long width, in unsigned long height);

  /* Media information */
  unsigned long GetTotalTime ();
  unsigned long GetVideoWidth ();
  unsigned long GetVideoHeight ();
  double GetTotalVideoFrames ();
  double GetVideoFramerate ();
  unsigned long GetNumberOfAudioTracks ();
  unsigned long GetNumberOfSubtitleTracks ();
  ACString GetAudioTrackLanguage (in unsigned long trackIndex);
  ACString GetSubtitleTrackLanguage (in unsigned long trackIndex);
  AUTF8String GetAudioTrackName (in unsigned long trackIndex);
  AUTF8String GetSubtitleTrackName (in unsigned long trackIndex);
  long GetCurrentAudioTrack ();
  long GetCurrentSubtitleTrack ();

  /* Media management */
  void SetCurrentAudioTrack (in long index);
  void SetCurrentSubtitleTrack (in long index);
};

